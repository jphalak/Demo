package test;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.util.CellUtil;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo {

	static WebDriver driver = null;

	public static void main(String[] args) throws IOException {

		initalizeDriver();
		List<WebElement> mTableRows = driver.findElements(
				By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr"));
/*		for (int i=1;i<=mTableRows.size();i++) {
			//header
			String col1= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[3]/p[1]/font[2]")).getText().trim();
			String ol= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[6]")).getText();
			String col2= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[9]/font[2]")).getText();
			String col3= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[14]/font[2]")).getText();
			String col4= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[17]/font[2]")).getText();
			String col5= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[20]/font[2]")).getText();
			String col6= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[27]/font[2]")).getText();
			String col7= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[30]/font[2]")).getText();
			String col8= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[33]/font[2]")).getText();
			String col9= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[38]/font[2]")).getText();
			String col10= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[41]/font[2]")).getText();
			String col11= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[44]/font[2]")).getText();
			String col12= driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr[4]/td[47]/font[2]")).getText();
			System.out.println(col1);
			
			System.out.print(col2);
			System.out.print(col3);
			System.out.print(col4);
			System.out.print(col5);
			System.out.print(col6);
			System.out.print(col7);
			System.out.print(col8);
			System.out.print(col9);
			System.out.print(col10);
			System.out.print(col11);
			System.out.print(col12);
		}*/
		
		XSSFWorkbook workbook = new XSSFWorkbook();
		XSSFSheet sheet = workbook.createSheet("Table");
		Font fontRedSuperscript = workbook.createFont();
		  fontRedSuperscript.setColor(Font.COLOR_RED);
		  fontRedSuperscript.setTypeOffset(Font.SS_SUPER);
		
			for (int i=4;i<=mTableRows.size();i++) {
				Row row = sheet.createRow(i);
				List<WebElement> columns = driver.findElements(
						By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr["+i+"]/td"));
				System.out.println("");
				for(int j=1;j<=columns.size();j++){
					String value = driver.findElement(By.xpath("/html/body/document/type/sequence/filename/description/text/div[215]/div/table/tbody/tr["+i+"]/td["+j+"]")).getText().trim();
					if(value.equals("")){
						value ="";
					}else if(value.equals(")")){
						value ="";
					}else if(value.equals("(A")||value.equals("(B")){
						value = value+")";
					}
					if(value.equals("1")){
						int k=j;
						String oldValue=row.getCell(j).getStringCellValue();
						Cell Cell = row.createCell(k-1);
						CellUtil.setFont(cell, font);
						.setCellValue(Cellvalue);
					}else{
						row.createCell(j).setCellValue(value);	
					}
					System.out.print(value);
					
				}
					
			}
			FileOutputStream out = new FileOutputStream( 
		            new File("E:" + File.separator + "selenium" + File.separator +"output.xlsx")); 
		  
		        workbook.write(out); 
		        out.close(); 

	}

	public static void initalizeDriver() {
		System.setProperty("webdriver.chrome.driver",
				"E:" + File.separator + "selenium" + File.separator + "chromedriver.exe");
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get(
				"https://www.sec.gov/Archives/edgar/data/1001039/000104746918000180/a2233502zdef14a.htm#di42001_compensation_discussion_and_analysis");
	}
}
